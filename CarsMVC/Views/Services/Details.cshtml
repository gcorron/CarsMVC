@using CarsMVC.ViewModels
@model ServiceViewModel

@{
    ViewBag.Title = "View";
}

<h2>Details for Service</h2>

<div>
    <hr />
    <div class="container">
        <div class="well well-sm col-md-8">
            <table class="table table-condensed">
                <tr style="font-weight:700">
                    <td>@Html.DisplayNameFor(m => m.ForCar)</td>
                    <td>@Html.DisplayNameFor(m => m.ServiceDate)</td>
                    <td>@Html.DisplayNameFor(model => model.TechName)</td>
                </tr>
                <tr>
                    <td>@Html.DisplayFor(m => m.ForCar)</td>
                    <td>@Html.DisplayFor(model => model.ServiceDate)</td>
                    <td>@Html.DisplayFor(model => model.TechName)</td>
                </tr>
            </table>
        </div>
    </div>
    <div class="container">
        <div class="row">
            <div class="col-lg-8">
                <table class="table table-striped table-condensed">
                    <thead>
                    <tr style="font-weight:700">
                        <td>
                            @Html.DisplayNameFor(model => model.ServiceLines[0].ServiceLineTypeString)
                        </td>
                        <td colspan="2">
                            @Html.DisplayNameFor(model => model.ServiceLines[0].ServiceLineDesc)
                        </td>
                        <td align="right">
                            @Html.DisplayNameFor(model => model.ServiceLines[0].ServiceLineCharge)
                        </td>
                    </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.ServiceLines.Count; i++)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(m => m.ServiceLines[i].ServiceLineTypeString)
                                </td>
                                <td colspan="2">
                                    @Html.DisplayFor(m => m.ServiceLines[i].ServiceLineDesc)
                                </td>
                                <td align="right">
                                    @Html.DisplayFor(m => m.ServiceLines[i].ServiceLineCharge, new { @class = "pmtallocated pull-right", @dir = "rtl" })
                                </td>
                            </tr>
                        }
                    </tbody>
                    <tfoot>
                        <tr>
                            <td></td>
                            <td class="success">Total Charges</td>
                            <td class="success">Labor</td>
                            <td class="success" align="right">@Html.DisplayFor(model => model.LaborCost, new { @class = "pmtallocated pull-right", @dir = "rtl" })</td>
                        </tr>
                        <tr>
                            <td></td>
                            <td></td>
                            <td class="success">Parts</td>
                            <td class="success" align="right">@Html.DisplayFor(model => model.PartsCost, new { @class = "pmtallocated pull-right", @dir = "rtl" })</td>
                        </tr>
                        <tr>
                            <td></td>
                            <td></td>
                            <td class="success">Total</td>
                            <td class="success" align="right">@Html.DisplayFor(model => model.TotalCost, new { @class = "pmtallocated pull-right", @dir = "rtl" })</td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>


</div>
<button type="button" class="btn btn-default" onclick="location.href='@Url.Action("Index", new { id = Model.CarID })'">Back</button>
<button type="submit" class="btn btn-primary" onclick="location.href='@Url.Action("Edit", new { id = Model.ServiceID })'">Edit</button>
